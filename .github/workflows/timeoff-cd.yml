name: CD - TIMEOFF

on:
  push:
    branches: [ "master"]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Pull source code
      uses: actions/checkout@v3

    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Login to ECR repository
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker app image
      working-directory: ./timeoff-app
      run: docker build . --file Dockerfile --tag gorilla-timeoff-app:latest

    - name: Build Docker nginx image
      working-directory: ./nginx
      run: docker build . --file Dockerfile --tag gorilla-timeoff-nginx:latest

    - name: Tag Docker app image
      run: docker tag gorilla-timeoff-app:latest 980952865757.dkr.ecr.us-west-2.amazonaws.com/gorilla-timeoff-app:latest
    
    - name: Tag Docker nginx image
      run: docker tag gorilla-timeoff-nginx:latest 980952865757.dkr.ecr.us-west-2.amazonaws.com/gorilla-timeoff-nginx:latest

    - name: Push Docker app image to ECR
      run: docker push 980952865757.dkr.ecr.us-west-2.amazonaws.com/gorilla-timeoff-app:latest
    
    - name: Push Docker nginx image to ECR
      run: docker push 980952865757.dkr.ecr.us-west-2.amazonaws.com/gorilla-timeoff-nginx:latest

    - name: Deploy changes - update ecs service
      run: aws ecs update-service --cluster gorilla-timeoff-ecs-cluster --service gorilla-timeoff-service --force-new-deployment --region us-west-2